name: Deploy GIM Order Service

on:
  push:
    branches:
      - main
    paths:
      - 'order-service/**'

jobs:
  build-and-deploy-order:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to ECR
      working-directory: ./order-service
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_GIM_ORDER }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Install and configure kubectl
      run: |
        curl -Lo kubectl "https://dl.k8s.io/release/v1.23.7/bin/linux/amd64/kubectl"
        chmod +x ./kubectl
        sudo mv ./kubectl /usr/local/bin/kubectl
        aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

    - name: Deploy to EKS
      run: |
        # Deploys to the 'lugx-gaming' namespace using the 'order-service' deployment and container names.
        kubectl set image deployment/order-service order-service=${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY_GIM_ORDER }}:${{ github.sha }} -n lugx-gaming
        
    - name: Verify deployment
      run: kubectl rollout status deployment/order-service -n lugx-gaming

    - name: Run Integration Tests
      working-directory: ./order-service
      run: |
        npm install -g newman
        newman run order-service.postman_collection.json --env-var "baseURL=${{ secrets.SERVICE_URL_GIM_ORDER }}" --bail